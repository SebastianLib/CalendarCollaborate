generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Task {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  userId        String
  name          String
  description   String
  startingHour  String
  endingHour    String
  color         String
  day           Int
  month         Int
  year          Int
  date          DateTime
  user          User         @relation(fields: [userId], references: [clerkId], onDelete: Cascade)
  team          Team?        @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId        String?      @db.ObjectId
  peopleTasks   PeopleTasks[] 
}

model User {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  clerkId         String           @unique
  firstName       String
  lastName        String
  username        String
  email           String
  photo           String
  teamMemberships TeamMembership[]
  Task            Task[]
  following       Follower[]       @relation("UserFollowers")
  followers       Follower[]
  peopleTasks     PeopleTasks[]
}

model PeopleTasks {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  clerkId String
  user    User   @relation(fields: [clerkId], references: [clerkId], onDelete: Cascade)
  taskId  String  @db.ObjectId
  task    Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
}

model Follower {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  user       User   @relation(fields: [userId], references: [clerkId])
  userId     String
  follower   User   @relation("UserFollowers", fields: [followerId], references: [clerkId], onDelete: Cascade)
  followerId String
}

model Team {
  id      String           @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  members TeamMembership[]
  tasks   Task[]
}

model TeamMembership {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  clerkId String
  teamId  String
  role    String @default("member")
  user    User   @relation(fields: [clerkId], references: [clerkId], onDelete: Cascade)
  team    Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)
}
